syntax = "proto3";

package projectsuit.device.v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";
import "projectsuit/common/v1/common.v1.proto";
import "projectsuit/inventory/v1/inventory.v1.proto"; // Warehouse mesajı için
import "projectsuit/category/v1/category.v1.proto"; // Category mesajı için (PrintJobRoutingRule)

option go_package = "github.com/enessefak/suit-proto/gen/go/projectsuit/device/v1;devicev1";
option java_package = "com.projectsuit.device.v1";
option java_multiple_files = true;
option java_outer_classname = "DeviceProto";

service DeviceService {
  // Device Komutları
  rpc CreateDevice(CreateDeviceRequest) returns (projectsuit.common.v1.IdResponse);
  rpc UpdateDevice(UpdateDeviceRequest) returns (projectsuit.common.v1.MutateResponse);
  rpc DeleteDevice(projectsuit.common.v1.DeleteByIdRequest) returns (projectsuit.common.v1.MutateResponse);

  // Print Job Routing Rule Komutları
  rpc CreatePrintJobRoutingRule(CreatePrintJobRoutingRuleRequest) returns (projectsuit.common.v1.IdResponse);
  rpc UpdatePrintJobRoutingRule(UpdatePrintJobRoutingRuleRequest) returns (projectsuit.common.v1.MutateResponse);
  rpc DeletePrintJobRoutingRule(projectsuit.common.v1.DeleteByIdRequest) returns (projectsuit.common.v1.MutateResponse);

  // Device Sorguları
  rpc GetDevice(projectsuit.common.v1.GetByIdRequest) returns (GetDeviceResponse);
  rpc ListDevices(ListDevicesRequest) returns (ListDevicesResponse);

  // Print Job Routing Rule Sorguları
  rpc ListPrintJobRoutingRules(ListPrintJobRoutingRulesRequest) returns (ListPrintJobRoutingRulesResponse);
}

// --- Entity Mesajları ---
message Device {
  string id = 1; // UUID
  string warehouse_id = 2; // UUID
  string name = 3;
  string type = 4; // 'RECEIPT_PRINTER', 'KITCHEN_PRINTER', 'KDS', 'POS_TERMINAL'
  optional string model = 5;
  optional string serial_number = 6;
  optional string ip_address = 7;
  optional string mac_address = 8;
  optional int32 port = 9;
  optional string connection_type = 10;
  string status = 11; // 'ONLINE', 'OFFLINE', 'ERROR'
  bool is_active = 12;
  google.protobuf.Struct configuration = 13;
  google.protobuf.Struct driver_details = 14;
  optional google.protobuf.Timestamp last_seen_at = 15;
  optional string installed_at = 16; // YYYY-MM-DD formatında string veya Timestamp
  optional string notes = 17;
  google.protobuf.Timestamp created_at = 18;
  google.protobuf.Timestamp updated_at = 19;

  optional projectsuit.inventory.v1.Warehouse warehouse_summary = 20;
}

message PrintJobRoutingRule {
  string id = 1;
  string warehouse_id = 2;
  optional string product_category_id = 3;
  string target_printer_id = 4; // devices.id (type='KITCHEN_PRINTER')
  bool is_active = 5;
  int32 priority = 6;
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;

  optional projectsuit.inventory.v1.Warehouse warehouse_summary = 20;
  optional projectsuit.category.v1.Category product_category_summary = 21;
  optional Device target_printer_summary = 22;
}

// --- Komut Mesajları ---
message CreateDeviceRequest {
  string warehouse_id = 1;
  string name = 2;
  string type = 3;
  optional string model = 4;
  optional string serial_number = 5;
  optional string ip_address = 6;
  optional string mac_address = 7;
  optional int32 port = 8;
  optional string connection_type = 9;
  optional string initial_status = 10;
  optional bool is_active = 11;
  optional google.protobuf.Struct configuration = 12;
  optional google.protobuf.Struct driver_details = 13;
  optional string installed_at = 14;
  optional string notes = 15;
}
message UpdateDeviceRequest {
  string id = 1;
  optional string name = 2;
  // warehouse_id ve type genelde güncellenmez
  optional string model = 3;
  optional string serial_number = 4;
  optional string ip_address = 5;
  optional string mac_address = 6;
  optional int32 port = 7;
  optional string connection_type = 8;
  optional string status = 9;
  optional bool is_active = 10;
  optional google.protobuf.Struct configuration = 11;
  optional google.protobuf.Struct driver_details = 12;
  optional string installed_at = 13;
  optional string notes = 14;
}

message CreatePrintJobRoutingRuleRequest {
  string warehouse_id = 1;
  optional string product_category_id = 2;
  string target_printer_id = 3;
  optional bool is_active = 4;
  optional int32 priority = 5;
}
message UpdatePrintJobRoutingRuleRequest {
  string id = 1;
  optional string product_category_id = 2;
  optional string target_printer_id = 3; // Genelde kuralın hedefi değişmez, silinip yeniden oluşturulur
  optional bool is_active = 4;
  optional int32 priority = 5;
}

// --- Sorgu Mesajları ---
message GetDeviceResponse { Device device = 1; }
message ListDevicesRequest {
  projectsuit.common.v1.ListRequest base_request = 1;
  optional string filter_by_warehouse_id = 2;
  optional string filter_by_type = 3;
  optional string filter_by_status = 4;
}
message ListDevicesResponse {
  repeated Device devices = 1;
  projectsuit.common.v1.PaginationResponse pagination = 2;
}

message ListPrintJobRoutingRulesRequest {
  projectsuit.common.v1.ListRequest base_request = 1;
  optional string filter_by_warehouse_id = 2;
  optional string filter_by_printer_id = 3; // target_printer_id
}
message ListPrintJobRoutingRulesResponse {
  repeated PrintJobRoutingRule rules = 1;
  projectsuit.common.v1.PaginationResponse pagination = 2;
}
